{
  "api/Noisrev.League.IO.RST.Helpers.OffsetHelper.ComputeOffset.html": {
    "href": "api/Noisrev.League.IO.RST.Helpers.OffsetHelper.ComputeOffset.html",
    "title": "Method ComputeOffset",
    "keywords": "Method ComputeOffset Namespace Noisrev.League.IO.RST.Helpers Assembly Noisrev.League.IO.RST.dll ComputeOffset(long, RType) Use RType to generate offsets for that text of RSTFile. public static ulong ComputeOffset(this long offset, RType type) Parameters offset long The offset of that text. type RType The type of that RSTFile. Returns ulong The generated offset. Exceptions OverflowException"
  },
  "api/Noisrev.League.IO.RST.Helpers.OffsetHelper.html": {
    "href": "api/Noisrev.League.IO.RST.Helpers.OffsetHelper.html",
    "title": "Class OffsetHelper",
    "keywords": "Class OffsetHelper Namespace Noisrev.League.IO.RST.Helpers Assembly Noisrev.League.IO.RST.dll Offset extension class. public static class OffsetHelper Inheritance object OffsetHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ComputeOffset(long, RType) Use RType to generate offsets for that text of RSTFile."
  },
  "api/Noisrev.League.IO.RST.Helpers.RTypeHelper.ComputeKey.html": {
    "href": "api/Noisrev.League.IO.RST.Helpers.RTypeHelper.ComputeKey.html",
    "title": "Method ComputeKey",
    "keywords": "Method ComputeKey Namespace Noisrev.League.IO.RST.Helpers Assembly Noisrev.League.IO.RST.dll ComputeKey(RType) Compute the key used to generate the hash. public static ulong ComputeKey(this RType type) Parameters type RType The type of RSTFile. Returns ulong The computed value."
  },
  "api/Noisrev.League.IO.RST.Helpers.RTypeHelper.GetRType.html": {
    "href": "api/Noisrev.League.IO.RST.Helpers.RTypeHelper.GetRType.html",
    "title": "Method GetRType",
    "keywords": "Method GetRType Namespace Noisrev.League.IO.RST.Helpers Assembly Noisrev.League.IO.RST.dll GetRType(RVersion) Gets the specified RType based on RVersion. public static RType? GetRType(this RVersion version) Parameters version RVersion The version of RSTFile. Returns RType? A RType, or null, depending on whether it is a valid RVersion."
  },
  "api/Noisrev.League.IO.RST.Helpers.RTypeHelper.html": {
    "href": "api/Noisrev.League.IO.RST.Helpers.RTypeHelper.html",
    "title": "Class RTypeHelper",
    "keywords": "Class RTypeHelper Namespace Noisrev.League.IO.RST.Helpers Assembly Noisrev.League.IO.RST.dll RType extension class. public static class RTypeHelper Inheritance object RTypeHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ComputeKey(RType) Compute the key used to generate the hash. GetRType(RVersion) Gets the specified RType based on RVersion."
  },
  "api/Noisrev.League.IO.RST.Helpers.html": {
    "href": "api/Noisrev.League.IO.RST.Helpers.html",
    "title": "Namespace Noisrev.League.IO.RST.Helpers",
    "keywords": "Namespace Noisrev.League.IO.RST.Helpers Classes OffsetHelper Offset extension class. RTypeHelper RType extension class."
  },
  "api/Noisrev.League.IO.RST.RMode.html": {
    "href": "api/Noisrev.League.IO.RST.RMode.html",
    "title": "Enum RMode",
    "keywords": "Enum RMode Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll RST File Mode. public enum RMode : byte Fields Default = 1 None = 0"
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.-ctor.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.-ctor.html",
    "title": "Constructor RSTBuilder",
    "keywords": "Constructor RSTBuilder Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll RSTBuilder() Initializes a new instance of the RSTBuilder class. public RSTBuilder() RSTBuilder(RSTFile) Initializes a new instance of the RSTBuilder class using the specified RSTFile. public RSTBuilder(RSTFile input) Parameters input RSTFile The RSTFile used to initialize the value of the instance. Exceptions ArgumentNullException The input is null."
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.Add.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.Add.html",
    "title": "Method Add",
    "keywords": "Method Add Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Add(ulong, string) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, string value) Parameters key ulong The key of the element to add. value string The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, bool) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, bool value) Parameters key ulong The key of the element to add. value bool The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, byte) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, byte value) Parameters key ulong The key of the element to add. value byte The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, sbyte) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, sbyte value) Parameters key ulong The key of the element to add. value sbyte The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, char) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, char value) Parameters key ulong The key of the element to add. value char The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, short) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, short value) Parameters key ulong The key of the element to add. value short The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, int) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, int value) Parameters key ulong The key of the element to add. value int The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, long) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, long value) Parameters key ulong The key of the element to add. value long The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, float) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, float value) Parameters key ulong The key of the element to add. value float The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, double) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, double value) Parameters key ulong The key of the element to add. value double The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, decimal) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, decimal value) Parameters key ulong The key of the element to add. value decimal The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, ushort) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, ushort value) Parameters key ulong The key of the element to add. value ushort The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, uint) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, uint value) Parameters key ulong The key of the element to add. value uint The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, ulong) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, ulong value) Parameters key ulong The key of the element to add. value ulong The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the RSTFile. ArgumentNullException The key is null. Add(ulong, object?) Adds the specified key and value to the current RSTFile. public RSTBuilder Add(ulong key, object? value) Parameters key ulong The key of the element to add. value object The value of the element to add. Returns RSTBuilder A reference to this instance after the add operation has completed. Exceptions ArgumentException An element with the same key already exists in the current RSTFile. ArgumentNullException The key is null."
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.Build.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.Build.html",
    "title": "Method Build",
    "keywords": "Method Build Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Build(string) Build the current RSTFile. public RSTBuilder Build(string path) Parameters path string The path used to save the current RSTFile. Returns RSTBuilder A reference to this instance after the operation is complete. Exceptions ArgumentNullException The path is null. Build(Stream, bool) Build the current RSTFile. public RSTBuilder Build(Stream outputStream, bool leaveOpen) Parameters outputStream Stream The stream used to output RSTFile. leaveOpen bool true to leave the stream open after the BinaryWriter object is disposed; otherwise, false. Returns RSTBuilder A reference to this instance after the operation is complete. Exceptions ArgumentException The outputStream does not support writes. ArgumentNullException The outputStream is null."
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.Clear.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.Clear.html",
    "title": "Method Clear",
    "keywords": "Method Clear Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Clear() Removes all elements in the current RSTFile. public RSTBuilder Clear() Returns RSTBuilder A reference to this instance after the operation is complete."
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.ContainsKey.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.ContainsKey.html",
    "title": "Method ContainsKey",
    "keywords": "Method ContainsKey Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll ContainsKey(ulong) Determines whether the current RSTFile contains the specified key. public bool ContainsKey(ulong key) Parameters key ulong The key to locate in the RSTFile. Returns bool True if the current RSTFile contains an element with the specified key; otherwise, false. Exceptions ArgumentNullException The key is null."
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.ContainsValue.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.ContainsValue.html",
    "title": "Method ContainsValue",
    "keywords": "Method ContainsValue Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll ContainsValue(string) Determines whether the current RSTFile contains the specified value. public bool ContainsValue(string value) Parameters value string The value to locate in the RSTFile. Returns bool True if the RSTFile contains an element with the specified value; otherwise, false. Exceptions ArgumentNullException The value is null."
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.Current.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.Current.html",
    "title": "Property Current",
    "keywords": "Property Current Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Current Current RSTFile. public RSTFile Current { get; } Property Value RSTFile"
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.Item.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.Item.html",
    "title": "Property this",
    "keywords": "Property this Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll this[ulong] Gets or sets the value associated with the specified key. public string this[ulong key] { get; set; } Parameters key ulong The key of the value to get or set. Property Value string The value associated with the specified key. If the specified key is not found, a get operation throws a KeyNotFoundException, and a set operation creates a new element with the specified key. Exceptions ArgumentNullException The key is null. KeyNotFoundException The property is retrieved and key does not exist in the collection."
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.Remove.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.Remove.html",
    "title": "Method Remove",
    "keywords": "Method Remove Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Remove(ulong) Removes the value with the specified key in the current RSTFile. public bool Remove(ulong key) Parameters key ulong The key of the element to remove. Returns bool True if the element is successfully found and removed; otherwise, false. This method returns false if key is not found in the RSTFile. Exceptions ArgumentNullException The key is null."
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.ReplaceAll.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.ReplaceAll.html",
    "title": "Method ReplaceAll",
    "keywords": "Method ReplaceAll Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll ReplaceAll(string, string) Replaces all matched elements in the current RSTFile. public RSTBuilder ReplaceAll(string oldText, string newText) Parameters oldText string The string to be replaced. newText string Replace with a new string. Returns RSTBuilder A reference to this instance after the operation is complete. Exceptions ArgumentNullException The oldText or newText is null. ReplaceAll(string, string, bool) Replaces all matched texts in the current RSTFile. public RSTBuilder ReplaceAll(string oldText, string newText, bool caseSensitive = false) Parameters oldText string The string to replaced. newText string Replace with a new string. caseSensitive bool Whether to enable case-sensitive comparison. Compares lowercase strings by default. Returns RSTBuilder A reference to this instance after the operation is complete. Exceptions ArgumentNullException The oldText or newText is null."
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.SetConfig.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.SetConfig.html",
    "title": "Method SetConfig",
    "keywords": "Method SetConfig Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll SetConfig(string) Sets the font config for the current RSTFile. Only supported in Ver2. public bool SetConfig(string fontConfig) Parameters fontConfig string The font config to set. Returns bool True if the font config was successfully sets; otherwise, false."
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.TryAdd.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.TryAdd.html",
    "title": "Method TryAdd",
    "keywords": "Method TryAdd Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll TryAdd(ulong, string) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, string value) Parameters key ulong The key of the element to add. value string The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, bool) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, bool value) Parameters key ulong The key of the element to add. value bool The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, byte) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, byte value) Parameters key ulong The key of the element to add. value byte The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, sbyte) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, sbyte value) Parameters key ulong The key of the element to add. value sbyte The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, char) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, char value) Parameters key ulong The key of the element to add. value char The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, short) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, short value) Parameters key ulong The key of the element to add. value short The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, int) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, int value) Parameters key ulong The key of the element to add. value int The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, long) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, long value) Parameters key ulong The key of the element to add. value long The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, float) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, float value) Parameters key ulong The key of the element to add. value float The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, double) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, double value) Parameters key ulong The key of the element to add. value double The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, decimal) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, decimal value) Parameters key ulong The key of the element to add. value decimal The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, ushort) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, ushort value) Parameters key ulong The key of the element to add. value ushort The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, uint) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, uint value) Parameters key ulong The key of the element to add. value uint The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, ulong) Adds the specified key and value to the current RSTFile. public bool TryAdd(ulong key, ulong value) Parameters key ulong The key of the element to add. value ulong The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null. TryAdd(ulong, object) Adds the specified key and value to the RSTFile. public bool TryAdd(ulong key, object value) Parameters key ulong The key of the element to add. value object The value of the element to add. Returns bool True if the element with the specified key was successfully added; otherwise, false. Exceptions ArgumentNullException The key is null."
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.TryGetValue.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.TryGetValue.html",
    "title": "Method TryGetValue",
    "keywords": "Method TryGetValue Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll TryGetValue(ulong, out string?) Gets the value associated with the specified key. public bool TryGetValue(ulong key, out string? value) Parameters key ulong The key of the value to get. value string When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. Returns bool True if the current RSTFile contains an element with the specified key; otherwise, false."
  },
  "api/Noisrev.League.IO.RST.RSTBuilder.html": {
    "href": "api/Noisrev.League.IO.RST.RSTBuilder.html",
    "title": "Class RSTBuilder",
    "keywords": "Class RSTBuilder Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Used to build RSTFile. This class cannot be inherited. public sealed class RSTBuilder : IDictionary<ulong, string>, ICollection<KeyValuePair<ulong, string>>, IEnumerable<KeyValuePair<ulong, string>>, IEnumerable Inheritance object RSTBuilder Implements IDictionary<ulong, string> ICollection<KeyValuePair<ulong, string>> IEnumerable<KeyValuePair<ulong, string>> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors RSTBuilder() Initializes a new instance of the RSTBuilder class. RSTBuilder(RSTFile) Initializes a new instance of the RSTBuilder class using the specified RSTFile. Properties Current Current RSTFile. this[ulong] Gets or sets the value associated with the specified key. Methods Add(ulong, bool) Adds the specified key and value to the current RSTFile. Add(ulong, byte) Adds the specified key and value to the current RSTFile. Add(ulong, char) Adds the specified key and value to the current RSTFile. Add(ulong, decimal) Adds the specified key and value to the current RSTFile. Add(ulong, double) Adds the specified key and value to the current RSTFile. Add(ulong, short) Adds the specified key and value to the current RSTFile. Add(ulong, int) Adds the specified key and value to the current RSTFile. Add(ulong, long) Adds the specified key and value to the current RSTFile. Add(ulong, object?) Adds the specified key and value to the current RSTFile. Add(ulong, sbyte) Adds the specified key and value to the current RSTFile. Add(ulong, float) Adds the specified key and value to the current RSTFile. Add(ulong, string) Adds the specified key and value to the current RSTFile. Add(ulong, ushort) Adds the specified key and value to the current RSTFile. Add(ulong, uint) Adds the specified key and value to the current RSTFile. Add(ulong, ulong) Adds the specified key and value to the current RSTFile. Build(Stream, bool) Build the current RSTFile. Build(string) Build the current RSTFile. Clear() Removes all elements in the current RSTFile. ContainsKey(ulong) Determines whether the current RSTFile contains the specified key. ContainsValue(string) Determines whether the current RSTFile contains the specified value. Remove(ulong) Removes the value with the specified key in the current RSTFile. ReplaceAll(string, string) Replaces all matched elements in the current RSTFile. ReplaceAll(string, string, bool) Replaces all matched texts in the current RSTFile. SetConfig(string) Sets the font config for the current RSTFile. Only supported in Ver2. TryAdd(ulong, bool) Adds the specified key and value to the current RSTFile. TryAdd(ulong, byte) Adds the specified key and value to the current RSTFile. TryAdd(ulong, char) Adds the specified key and value to the current RSTFile. TryAdd(ulong, decimal) Adds the specified key and value to the current RSTFile. TryAdd(ulong, double) Adds the specified key and value to the current RSTFile. TryAdd(ulong, short) Adds the specified key and value to the current RSTFile. TryAdd(ulong, int) Adds the specified key and value to the current RSTFile. TryAdd(ulong, long) Adds the specified key and value to the current RSTFile. TryAdd(ulong, object) Adds the specified key and value to the RSTFile. TryAdd(ulong, sbyte) Adds the specified key and value to the current RSTFile. TryAdd(ulong, float) Adds the specified key and value to the current RSTFile. TryAdd(ulong, string) Adds the specified key and value to the current RSTFile. TryAdd(ulong, ushort) Adds the specified key and value to the current RSTFile. TryAdd(ulong, uint) Adds the specified key and value to the current RSTFile. TryAdd(ulong, ulong) Adds the specified key and value to the current RSTFile. TryGetValue(ulong, out string?) Gets the value associated with the specified key."
  },
  "api/Noisrev.League.IO.RST.RSTFile.-ctor.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.-ctor.html",
    "title": "Constructor RSTFile",
    "keywords": "Constructor RSTFile Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll RSTFile(RVersion) Initializes a new instance of the RSTFile class based on the specified RVersion. public RSTFile(RVersion version) Parameters version RVersion RST Version Exceptions ArgumentException Invalid Major version. RSTFile(Stream, bool) Initializes a new instance of the RSTFile class based on the specified Stream. public RSTFile(Stream inputStream, bool leaveOpen) Parameters inputStream Stream The input stream. leaveOpen bool True to leave the stream open after the BinaryReader object is disposed; otherwise, false. Exceptions ArgumentException \"The inputStream does not supports reading!\" ArgumentNullException The inputStream is null. InvalidDataException Invalid RST file header."
  },
  "api/Noisrev.League.IO.RST.RSTFile.Config.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.Config.html",
    "title": "Property Config",
    "keywords": "Property Config Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Config The font config of this RSTFile. using by RST v2. public string? Config { get; set; } Property Value string"
  },
  "api/Noisrev.League.IO.RST.RSTFile.DataOffset.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.DataOffset.html",
    "title": "Property DataOffset",
    "keywords": "Property DataOffset Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll DataOffset The offset of the string data in this RSTFile. public int DataOffset { get; } Property Value int"
  },
  "api/Noisrev.League.IO.RST.RSTFile.Entries.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.Entries.html",
    "title": "Property Entries",
    "keywords": "Property Entries Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Entries The collection of hashes and strings of this RSTFile. public Dictionary<ulong, string> Entries { get; } Property Value Dictionary<ulong, string>"
  },
  "api/Noisrev.League.IO.RST.RSTFile.Equals.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.Equals.html",
    "title": "Method Equals",
    "keywords": "Method Equals Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Equals(RSTFile?) Indicates whether the current object is equal to another object of the same type. public bool Equals(RSTFile? other) Parameters other RSTFile An object to compare with this object. Returns bool True if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false."
  },
  "api/Noisrev.League.IO.RST.RSTFile.GetHashCode.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.GetHashCode.html",
    "title": "Method GetHashCode",
    "keywords": "Method GetHashCode Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/Noisrev.League.IO.RST.RSTFile.Load.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.Load.html",
    "title": "Method Load",
    "keywords": "Method Load Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Load(string) Load RSTFile from the local file. public static RSTFile Load(string path) Parameters path string The local file path. Returns RSTFile Instance of the RSTFile that was read successfully. Exceptions ArgumentNullException The path is null. FileNotFoundException File not found."
  },
  "api/Noisrev.League.IO.RST.RSTFile.MagicCode.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.MagicCode.html",
    "title": "Field MagicCode",
    "keywords": "Field MagicCode Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll The magic code of RSTFile. public static readonly byte[] MagicCode Returns byte[]"
  },
  "api/Noisrev.League.IO.RST.RSTFile.Mode.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.Mode.html",
    "title": "Property Mode",
    "keywords": "Property Mode Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Mode The mode of this RSTFile. public RMode Mode { get; } Property Value RMode"
  },
  "api/Noisrev.League.IO.RST.RSTFile.Type.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.Type.html",
    "title": "Property Type",
    "keywords": "Property Type Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Type The type of this RSTFile. Used to generate hashes. public RType Type { get; } Property Value RType"
  },
  "api/Noisrev.League.IO.RST.RSTFile.Version.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.Version.html",
    "title": "Property Version",
    "keywords": "Property Version Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Version The version of this RSTFile. public RVersion Version { get; } Property Value RVersion"
  },
  "api/Noisrev.League.IO.RST.RSTFile.Write.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.Write.html",
    "title": "Method Write",
    "keywords": "Method Write Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Write(string) Creates a new file, writes the binary data of this RSTFile to the file, and then closes the file. If the target file already exists, it is overwritten. public void Write(string outputPath) Parameters outputPath string The file to write to. Exceptions ArgumentNullException The outputPath is null. Write(Stream, bool) Using an output stream, write this RSTFile to that Stream. public void Write(Stream outputStream, bool leaveOpen) Parameters outputStream Stream The output stream. leaveOpen bool true to leave the stream open after the BinaryWriter object is disposed; otherwise, false. Exceptions ArgumentException The outputStream does not support writes. ArgumentNullException The outputStream is null."
  },
  "api/Noisrev.League.IO.RST.RSTFile.html": {
    "href": "api/Noisrev.League.IO.RST.RSTFile.html",
    "title": "Class RSTFile",
    "keywords": "Class RSTFile Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll Riot String Table File. public class RSTFile : IEquatable<RSTFile> Inheritance object RSTFile Implements IEquatable<RSTFile> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RSTFile(RVersion) Initializes a new instance of the RSTFile class based on the specified RVersion. RSTFile(Stream, bool) Initializes a new instance of the RSTFile class based on the specified Stream. Fields MagicCode The magic code of RSTFile. Properties Config The font config of this RSTFile. using by RST v2. DataOffset The offset of the string data in this RSTFile. Entries The collection of hashes and strings of this RSTFile. Mode The mode of this RSTFile. Type The type of this RSTFile. Used to generate hashes. Version The version of this RSTFile. Methods Equals(RSTFile?) Indicates whether the current object is equal to another object of the same type. Equals(object?) Determines whether the specified object is equal to the current object. GetHashCode() Serves as the default hash function. Load(string) Load RSTFile from the local file. Write(Stream, bool) Using an output stream, write this RSTFile to that Stream. Write(string) Creates a new file, writes the binary data of this RSTFile to the file, and then closes the file. If the target file already exists, it is overwritten."
  },
  "api/Noisrev.League.IO.RST.RSTHash.ComputeHash.html": {
    "href": "api/Noisrev.League.IO.RST.RSTHash.ComputeHash.html",
    "title": "Method ComputeHash",
    "keywords": "Method ComputeHash Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll ComputeHash(string, RType) Generate a hash without offset based on the string and RType. public static ulong ComputeHash(string toHash, RType type) Parameters toHash string The string used to generate the hash. type RType The type of that RSTFile. Returns ulong The generated hash. Exceptions ArgumentNullException The toHash is null. ComputeHash(string, RType, Encoding) Generate a hash without offset based on the string and RType. public static ulong ComputeHash(string toHash, RType type, Encoding encoding) Parameters toHash string The string used to generate the hash. type RType The type of that RSTFile. encoding Encoding The character encoding to use. Returns ulong The generated hash. Exceptions ArgumentNullException The toHash is null. ComputeHash(string, RType, Encoding, CultureInfo) Generate a hash without offset based on the string and RType. public static ulong ComputeHash(string toHash, RType type, Encoding encoding, CultureInfo cultureInfo) Parameters toHash string The string used to generate the hash. type RType The type of that RSTFile. encoding Encoding The character encoding to use. cultureInfo CultureInfo An object that supplies culture-specific casing rules. Returns ulong The generated hash. Exceptions ArgumentNullException The toHash or encoding or cultureInfo is null. ComputeHash(string, long, RType) Generate a hash based on the string and offset and RType. public static ulong ComputeHash(string toHash, long offset, RType type) Parameters toHash string The string used to generate the hash. offset long The offset of that text. type RType The type of that RSTFile. Returns ulong The generated hash. Exceptions ArgumentNullException The toHash is null. ArgumentOutOfRangeException The offset is less than 0. ComputeHash(string, long, RType, Encoding) Generate a hash based on the string and offset and RType. public static ulong ComputeHash(string toHash, long offset, RType type, Encoding encoding) Parameters toHash string The string used to generate the hash. offset long The offset of that text. type RType The type of that RSTFile. encoding Encoding The character encoding to use. Returns ulong The generated hash. Exceptions ArgumentNullException The toHash or encoding is null. ArgumentOutOfRangeException The offset is less than 0. ComputeHash(string, long, RType, Encoding, CultureInfo) Generate a hash based on the string and offset and RType. public static ulong ComputeHash(string toHash, long offset, RType type, Encoding encoding, CultureInfo cultureInfo) Parameters toHash string The string used to generate the hash. offset long The offset of the text. type RType The type of RSTFile. encoding Encoding The character encoding to use. cultureInfo CultureInfo An object that supplies culture-specific casing rules. Returns ulong The generated hash. Exceptions ArgumentNullException The toHash or encoding or cultureInfo is null. ArgumentOutOfRangeException The offset is less than 0. ComputeHash(ulong, long, RType) Regenerate a new hash with offset using the generated hash and type. public static ulong ComputeHash(ulong hash, long offset, RType type) Parameters hash ulong A hash used to merge offset. offset long The offset of the text. type RType The type of RSTFile. Returns ulong The regenerated hash with offset"
  },
  "api/Noisrev.League.IO.RST.RSTHash.html": {
    "href": "api/Noisrev.League.IO.RST.RSTHash.html",
    "title": "Class RSTHash",
    "keywords": "Class RSTHash Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll RST hashes compute class. public static class RSTHash Inheritance object RSTHash Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ComputeHash(string, RType) Generate a hash without offset based on the string and RType. ComputeHash(string, RType, Encoding) Generate a hash without offset based on the string and RType. ComputeHash(string, RType, Encoding, CultureInfo) Generate a hash without offset based on the string and RType. ComputeHash(string, long, RType) Generate a hash based on the string and offset and RType. ComputeHash(string, long, RType, Encoding) Generate a hash based on the string and offset and RType. ComputeHash(string, long, RType, Encoding, CultureInfo) Generate a hash based on the string and offset and RType. ComputeHash(ulong, long, RType) Regenerate a new hash with offset using the generated hash and type."
  },
  "api/Noisrev.League.IO.RST.RType.html": {
    "href": "api/Noisrev.League.IO.RST.RType.html",
    "title": "Enum RType",
    "keywords": "Enum RType Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll RST File Type. public enum RType Extension Methods RTypeHelper.ComputeKey(RType) Fields Complex = 40 using by RST v2, v3 Simple = 39 using by RST v4, v5"
  },
  "api/Noisrev.League.IO.RST.RVersion.html": {
    "href": "api/Noisrev.League.IO.RST.RVersion.html",
    "title": "Enum RVersion",
    "keywords": "Enum RVersion Namespace Noisrev.League.IO.RST Assembly Noisrev.League.IO.RST.dll RST File Version. public enum RVersion : byte Extension Methods RTypeHelper.GetRType(RVersion) Fields Ver2 = 2 Version 2 Ver3 = 3 Version 3 Ver4 = 4 Version 4 Ver5 = 5 Version 5"
  },
  "api/Noisrev.League.IO.RST.html": {
    "href": "api/Noisrev.League.IO.RST.html",
    "title": "Namespace Noisrev.League.IO.RST",
    "keywords": "Namespace Noisrev.League.IO.RST Namespaces Noisrev.League.IO.RST.Helpers Classes RSTBuilder Used to build RSTFile. This class cannot be inherited. RSTFile Riot String Table File. RSTHash RST hashes compute class. Enums RMode RST File Mode. RType RST File Type. RVersion RST File Version."
  },
  "index.html": {
    "href": "index.html",
    "title": "Getting Started",
    "keywords": "Getting Started Noisrev.League.IO.RST is a powerful parsing library for RST files, in .NET. It provides fast parsing, editing and writing of RST files. Quick Start Install via NuGet Package Manager in Visual Studio .NET CLI : dotnet add package Noisrev.League.IO.RST using Noisrev.League.IO.RST; var rst = RSTFile.Load(\"your rst file path\"); Build RST files with RSTBuilder RSTBuilder provides some methods to easily editing the entries of RSTFile. Example: // Create a new RSTBuilder, with a local file var builder = new RSTBuilder(RSTFile.Load(\"your rst file path\")); // Or with a new RSTFile // var builder = new RSTBuilder(new RSTFile(RVersion.Ver5)); // Add some elements to the current RSTFile. builder.Add(56281743, \"TestValue\"); builder.Add(RSTHash.ComputeHash(\"ItemA\", RType.Simple), \"Some Text.\"); // Replace all matching strings in the current RSTFile. builder.ReplaceAll(\"Miss Fortune\", \"Uwu MF\"); // And then save the current RSTFile. builder.Build(\"The output file path.\");"
  }
}